import React from "react";
import PropTypes from "prop-types";
import { ResponsiveBar } from "@nivo/bar";
import config from "./GitCustodianVulnerabilityTypesChartConfig";
import { defaultConfig, getColorByData, adjustBarWidth} from "../../../../charts/charts-views";
import {METRIC_THEME_CHART_PALETTE_COLORS} from "../../../../../common/helpers/metrics/metricTheme.helpers";

function GitCustodianVulnerabilityTypesChart({ data }) {
  if (!Array.isArray(data) || data.length === 0) {
    return (
      <div className="new-chart p-0" style={{height: "200px"}} >
        <div className={'p-2'}>No data found.</div>
      </div>
    );
  }

  const getTooltip = (point) => {
    return (
      <div className="custom-bar-tooltip" key={point.indexValue}>
        <span>{`${point.data.vulnerability_type}: `}<strong>{point.value}</strong> vulnerabilities</span>
      </div>
    );
  };

  return (
    <div className="new-chart p-0" style={{ height: "200px" }}>
      <ResponsiveBar
        data={data}
        cutoffLength={5}
        tooltip={getTooltip}
        {...defaultConfig("Vulnerability Count", "Vulnerability Type", true, true, "values", "cutoffString", true)}
        {...config(getColorByData, METRIC_THEME_CHART_PALETTE_COLORS)}
        {...adjustBarWidth(data)}
      />
    </div>
  );
}

GitCustodianVulnerabilityTypesChart.propTypes = {
  data: PropTypes.array
};

export default GitCustodianVulnerabilityTypesChart;
