import { hasStringValue } from "components/common/helpers/string-helpers";

export const ENDPOINT_REQUEST_HEADER_BEARER_TOKEN_TYPES = {
  LONG_LIVED_BEARER_TOKEN: "long_lived",
  SHORT_LIVED_BEARER_TOKEN: "short_lived",
};

export const ENDPOINT_REQUEST_HEADER_BEARER_TOKEN_TYPE_LABELS = {
  LONG_LIVED_BEARER_TOKEN: "Long Lived Bearer Token",
  SHORT_LIVED_BEARER_TOKEN: "Short Lived Bearer Token",
};

export const getEndpointRequestHeaderBearerTokenTypeLabel = (type) => {
  if (hasStringValue(type) !== true) {
    return "";
  }

  switch (type) {
    case ENDPOINT_REQUEST_HEADER_BEARER_TOKEN_TYPES.LONG_LIVED_BEARER_TOKEN:
      return ENDPOINT_REQUEST_HEADER_BEARER_TOKEN_TYPE_LABELS.LONG_LIVED_BEARER_TOKEN;
    case ENDPOINT_REQUEST_HEADER_BEARER_TOKEN_TYPES.SHORT_LIVED_BEARER_TOKEN:
      return ENDPOINT_REQUEST_HEADER_BEARER_TOKEN_TYPE_LABELS.SHORT_LIVED_BEARER_TOKEN;
    default:
      return type;
  }
};

export const ENDPOINT_REQUEST_HEADER_BEARER_TOKEN_TYPE_SELECT_OPTIONS = [
  {
    text: ENDPOINT_REQUEST_HEADER_BEARER_TOKEN_TYPE_LABELS.LONG_LIVED_BEARER_TOKEN,
    value: ENDPOINT_REQUEST_HEADER_BEARER_TOKEN_TYPES.LONG_LIVED_BEARER_TOKEN,
  },
  {
    text: ENDPOINT_REQUEST_HEADER_BEARER_TOKEN_TYPE_LABELS.SHORT_LIVED_BEARER_TOKEN,
    value: ENDPOINT_REQUEST_HEADER_BEARER_TOKEN_TYPES.SHORT_LIVED_BEARER_TOKEN,
  },
];

